{"ast":null,"code":"var _jsxFileName = \"E:\\\\project_4\\\\TripTales-Complete\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport authReducer from \"./state\"; //Setting Reducer in our index.js file\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\n\n//As we are redux-persist(Specially done when we are using redux-persist)\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //Session storage is alternative-But once Tab is closed,information is lost\n//Session storage is to store only for that particular session\nimport { PersistGate } from \"redux-persist/integration/react\";\n//Main use of Redux Persist-To store user Information even when he closes the Tab\n//To clear the Information-User has to remove the cache\n\n//Now we have to resign it-\n/*This all part of code is from ReduxJS Toolkit and Redux persist Documentation*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  version: 1\n};\nconst persistedReducer = persistReducer(persistConfig, authReducer); //Having reducer persisted\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware =>\n  //Setting the Middleware\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER] //Ignore Warnings while using redux-persist\n    }\n  })\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistStore(store),\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 6\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this));\n\n/*This is Boilerplate to configure our Application*/","map":{"version":3,"names":["React","ReactDOM","App","authReducer","configureStore","Provider","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","jsxDEV","_jsxDEV","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","root","createRoot","document","getElementById","render","StrictMode","children","loading","persistor","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/project_4/TripTales-Complete/client/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport authReducer from \"./state\";//Setting Reducer in our index.js file\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n//As we are redux-persist(Specially done when we are using redux-persist)\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";//Session storage is alternative-But once Tab is closed,information is lost\r\n//Session storage is to store only for that particular session\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n//Main use of Redux Persist-To store user Information even when he closes the Tab\r\n//To clear the Information-User has to remove the cache\r\n\r\n//Now we have to resign it-\r\n/*This all part of code is from ReduxJS Toolkit and Redux persist Documentation*/\r\nconst persistConfig = { key: \"root\", storage, version: 1 };\r\nconst persistedReducer = persistReducer(persistConfig, authReducer);//Having reducer persisted\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>//Setting the Middleware\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],//Ignore Warnings while using redux-persist\r\n      },\r\n    }),\r\n});\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n     <Provider store={store}>{/*Creating our Provider*/}\r\n      <PersistGate loading={null} persistor={persistStore(store)}>\r\n        <App />{/*Passing the App*/}\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n\r\n/*This is Boilerplate to configure our Application*/"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,WAAW,MAAM,SAAS,CAAC;AAClC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,aAAa;;AAEtC;AACA,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B,CAAC;AAChD;AACA,SAASC,WAAW,QAAQ,iCAAiC;AAC7D;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAG;EAAEC,GAAG,EAAE,MAAM;EAAEL,OAAO;EAAEM,OAAO,EAAE;AAAE,CAAC;AAC1D,MAAMC,gBAAgB,GAAGd,cAAc,CAACW,aAAa,EAAEf,WAAW,CAAC,CAAC;AACpE,MAAMmB,KAAK,GAAGlB,cAAc,CAAC;EAC3BmB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB;EAAI;EACnCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACnB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,CAAC,CAAC;IACtE;EACF,CAAC;AACL,CAAC,CAAC;;AAGF,MAAMe,IAAI,GAAG3B,QAAQ,CAAC4B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTf,OAAA,CAACjB,KAAK,CAACiC,UAAU;EAAAC,QAAA,eACdjB,OAAA,CAACZ,QAAQ;IAACiB,KAAK,EAAEA,KAAM;IAAAY,QAAA,eACtBjB,OAAA,CAACF,WAAW;MAACoB,OAAO,EAAE,IAAK;MAACC,SAAS,EAAE9B,YAAY,CAACgB,KAAK,CAAE;MAAAY,QAAA,eACzDjB,OAAA,CAACf,GAAG;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}